Aug 15, 2016:
1. TunTap drivers
sudo brew cask install tuntap
sudo launchctl load /Library/LaunchDaemons/net.sf.tuntaposx.tap.plist
sudo launchctl load /Library/LaunchDaemons/net.sf.tuntaposx.tun.plist

2. Bridge interface
sudo ifconfig bridge1 create
sudo ifconfig bridge1 addm en0
sudo ifconfig bridge1 192.168.100.1/24

3. Packet forwarding and NAT
curl -OL https://github.com/nerves-project/nerves_system_qemu_arm/raw/develop/qemu-pf.conf
sudo sysctl -w net.inet.ip.forwarding=1
sudo pfctl -F all              # flush existing rules
sudo pfctl -f qemu-pf.conf     # load NAT rules for bridge1

4. DHCP configuration
brew install dnsmasq
curl -OL https://github.com/nerves-project/nerves_system_qemu_arm/raw/develop/qemu-dnsmasq.conf
... works on os x el capitan version 10.11.6:
sudo dnsmasq --conf-file=qemu-dnsmasq.conf  # daemonizes into the background
  ... ignore this trial/error on macbook:
  sudo /usr/local/sbin/dnsmasq --conf-file=qemu-dnsmasq.conf
  sudo cp qemu-dnsmasq.conf /usr/local/etc/dnsmasq.conf
  sudo nano -w /usr/local/etc/dnsmasq.conf
  sudo brew services start dnsmasq --conf-file=qemu-dnsmasq.conf
  sudo brew services stop dnsmasq
  sudo brew services stop list
* note: bootpd was running on port 67 ... why?
sudo netstat -an | grep 67 ... check for dhcp server on udp port 67
... so, to manually disable bootpd (a DHCP server):
sudo /bin/launchctl unload -w /System/Library/LaunchDaemons/bootps.plist
nano -w /System/Library/LaunchDaemons/bootps.plist ... ensure the Disabled key is set to True
sudo launchctl list

curl -OL https://github.com/nerves-project/nerves_system_qemu_arm/raw/develop/qemu-ifup.sh
curl -OL https://github.com/nerves-project/nerves_system_qemu_arm/raw/develop/qemu-ifdown.sh

... now, build and try it:
NERVES_TARGET=qemu_arm mix deps.get
NERVES_TARGET=qemu_arm mix firmware

fwup -a -d _images/qemu_arm/hello_network.img -i _images/qemu_arm/hello_network.fw -t complete

sudo qemu-system-arm -M vexpress-a9 -smp 1 -m 256                    \
    -kernel _build/qemu_arm/dev/nerves/system/images/zImage            \
    -dtb _build/qemu_arm/dev/nerves/system/images/vexpress-v2p-ca9.dtb \
    -drive file=_images/qemu_arm/hello_network.img,if=sd,format=raw    \
    -append "console=ttyAMA0,115200 root=/dev/mmcblk0p2" -serial stdio \
    -net nic,model=lan9118                                             \
    -net tap,ifname=tap0,script=qemu-ifup.sh,downscript=qemu-ifdown.sh

Once booted up into the IEX console, you can verify that
network connectivity and DNS name resolution works by typing in:
iex(1)> HelloNetwork.test_dns
{:ok,
 {:hostent, 'nerves-project.org', [], :inet, 4,
  [{192, 30, 252, 154}, {192, 30, 252, 153}]}}



























